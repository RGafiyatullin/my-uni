
namespace RG.Term02.RefWork1 {
	using System;
	using System.Reflection;

	internal class ArithHack <T> {
		static internal T Add( object a, object b ) {
			// MethodInfo mi = typeof(T).GetMethod("op_Addition", BindingFlags.Static | BindingFlags.Public );
			// Console.WriteLine("a: {0}; b: {1}; mi: {2}", a, b, mi == null);
			// return (T) mi.Invoke(a, new Object[]{b});

			var t = typeof(T);
			//if ( t == typeof(Int64) ) return (T) Convert.ChangeType( (Int64)a + (Int64)b, typeof(T) );
